@page "/"
@inherits ComponentBase
@*<PageTitle >Index</PageTitle>


<h1 style="color: red">Assalomu alekum </h1>
*@@*
<a  href="https://localhost:7230/countdown">
    <button style=" InputNumber<int> = 0">Next Window</button>
  </a>*@
@*
<form>
    <label for="Daqiqa">Daqiqani kiriting</label><br />
    <span id="result"></span>
    
    <a href="https://localhost:7230/countdown">
    <input type="button" id="daqiqq" name="Daqiqa"/><br />
    </a>
</form>*@




@*<input type="text" id="fname" name="fname" value="John">
<button @onclick="UseInputValue">Use Input Value</button>

<div class="output">Value will appear here</div>*@

@*@code {
    private string inputValue = "John";

    private void UseInputValue()
    {
        // Use the input value
        var outputElement = document.querySelector(".output");
        outputElement.textContent = "Input Value: " + inputValue;
    }
}*@




<label for="minutes">Enter minutes:</label>
<input type="number" id="minutes" @bind="minutes" />
<button @onclick="StartTimer">Start Timer</button>

<p>Time remaining: @formattedTime</p>

@code {
    private int minutes = 0;
    private TimeSpan remainingTime;
    private string formattedTime => remainingTime.ToString(@"hh\:mm\:ss");

    private System.Threading.Timer timer;

    private void StartTimer()
    {
        remainingTime = TimeSpan.FromMinutes(minutes);
        timer = new System.Threading.Timer(UpdateTimer, null, 0, 1000);
    }

    private void UpdateTimer(object state)
    {
        if (remainingTime.TotalSeconds > 0)
        {
            remainingTime = remainingTime.Subtract(TimeSpan.FromSeconds(1));
            InvokeAsync(StateHasChanged);
        }
        else
        {
            timer.Dispose();
        }
    }
}